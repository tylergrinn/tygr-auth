{"version":3,"sources":["webpack://@tygr/auth/sass/_switches.scss","webpack://@tygr/auth/sass/_variables.scss","webpack://@tygr/auth/node_modules/@tygr/switch/_index.scss","webpack://@tygr/auth/sass/components/_auth.scss","webpack://@tygr/auth/sass/components/_button.scss","webpack://@tygr/auth/sass/components/_fonts.scss","webpack://@tygr/auth/sass/components/_form.scss","webpack://@tygr/auth/node_modules/@tygr/logo/sass/index.scss","webpack://@tygr/auth/demo/styles/_variables.scss","webpack://@tygr/auth/sass/components/_header.scss","webpack://@tygr/auth/sass/components/_local.scss","webpack://@tygr/auth/sass/components/_login.scss","webpack://@tygr/auth/sass/components/_spinner.scss","webpack://@tygr/auth/sass/components/_user.scss"],"names":[],"mappings":";AAKE,uBCUA,uNASA,gBDlBgB,CCmBhB,iBACA,4BDjBA,sECMA,oLASA,eDZgB,CCahB,iBACA,4BC0BI,sPDrCJ,6NAgBA,UACA,aACA,aACA,YACA,UACA,oBACA,kBACA,oBCcI,wODrCJ,6NAgBA,UACA,aACA,aACA,YACA,UACA,oBACA,kBACA,oBCcI,iODrCJ,6NAgBA,UACA,aACA,aACA,YACA,UACA,oBACA,kBACA,oBCcI,2ODrCJ,6MAgBA,UACA,aACA,aACA,YACA,UACA,oBACA,kBACA,oBDdE,sQACE,aE2BA,gQDrCJ,6MAgBA,UACA,aACA,aACA,YACA,UACA,oBACA,kBACA,oBDdE,2RACE,aE2BA,2ODrCJ,6MAgBA,UACA,aACA,aACA,YACA,UACA,oBACA,kBACA,oBDdE,sQACE,aAKF,2RCfF,6MAgBA,UACA,aACA,aACA,YACA,UACA,oBACA,kBACA,oBDJE,yQACE,aACA,oBANF,gTCfF,6MAgBA,UACA,aACA,aACA,YACA,UACA,oBACA,kBACA,oBDJE,8RACE,aACA,oBEgBA,0UDrCJ,6MAgBA,UACA,aACA,aACA,YACA,UACA,oBACA,kBACA,oBCcI,mUDrCJ,6MAgBA,UACA,aACA,aACA,YACA,UACA,oBACA,kBACA,oBCcI,iVDrCJ,6MAgBA,UACA,aACA,aACA,YACA,UACA,oBACA,kBACA,oBCcI,0UDrCJ,6MAgBA,UACA,aACA,aACA,YACA,UACA,oBACA,kBACA,oBEtCF,WACE,gBACA,oBCDA,sEAGE,gBACA,sBACA,YACA,WACA,sBACA,sBACA,YACA,kBAEA,wFACE,gCAEF,iGACE,gCAGF,kFACE,wBClBJ,cACE,qCJDM,CIIR,8EAKE,kCJRQ,CKHV,gBACE,aACA,sBAGF,iBACE,aAGF,iBACE,qBACA,qBACA,sBACA,YAEA,iDACE,qBAIJ,0BACE,gCCpBJ,WACE,iBAEA,oCAEE,UACA,qBACA,qBACA,kBAGF,kBACE,WCdO,CDeP,6BAGF,kBACE,WClBO,CDmBP,6BAIJ,kBACE,GACE,wBACA,wBAIF,IACE,0BACA,wBAEF,IACE,0BACA,wBAIF,IACE,2BACA,oBAEF,IACE,2BACA,oBAGF,KACE,wBACA,uBAIJ,kBACE,GACE,wBACA,oBAIF,IACE,0BACA,uBAEF,IACE,0BACA,uBAIF,IACE,0BACA,wBAEF,IACE,0BACA,wBAGF,KACE,wBACA,yBEjFF,mBACE,aACA,uBACA,mBCLF,6BAEE,WACA,gBCJJ,YACE,aACA,sBACA,oBAEA,oBACE,aACA,uBACA,mBAGF,uBACE,aACA,sBAGF,4BACE,kBCfJ,oBACE,aACA,mBACA,uBACA,sBACA,aAEA,+BACE,cAGF,sBACE,cAIA,qCACE,aACA,mBAEA,yCACE,WACA,YACA,WACA,kBACA,eXrBF,CWsBE,sCAIA,sDACE,+BADF,sDACE,+BADF,sDACE,8BADF,sDACE,+BADF,sDACE,+BADF,sDACE,+BADF,sDACE,+BADF,sDACE,+BADF,sDACE,+BAfN,qCACE,aACA,mBAEA,yCACE,WACA,YACA,WACA,kBACA,eXrBF,CWsBE,sCAIA,sDACE,+BADF,sDACE,+BADF,sDACE,+BADF,sDACE,+BADF,sDACE,+BADF,sDACE,+BADF,sDACE,+BADF,sDACE,+BADF,sDACE,8BAfN,qCACE,aACA,mBAEA,yCACE,WACA,YACA,WACA,kBACA,eXrBF,CWsBE,sCAIA,sDACE,+BADF,sDACE,+BADF,sDACE,+BADF,sDACE,+BADF,sDACE,+BADF,sDACE,+BADF,sDACE,+BADF,sDACE,+BADF,sDACE,+BAfN,qCACE,aACA,mBAEA,yCACE,WACA,YACA,WACA,kBACA,eXrBF,CWsBE,sCAIA,sDACE,+BADF,sDACE,+BADF,sDACE,+BADF,sDACE,+BADF,sDACE,+BADF,sDACE,+BADF,sDACE,+BADF,sDACE,+BADF,sDACE,+BAfN,qCACE,aACA,mBAEA,yCACE,WACA,YACA,WACA,kBACA,eXrBF,CWsBE,sCAIA,sDACE,8BADF,sDACE,+BADF,sDACE,+BADF,sDACE,+BADF,sDACE,+BADF,sDACE,+BADF,sDACE,+BADF,sDACE,+BADF,sDACE,+BAfN,qCACE,aACA,mBAEA,yCACE,WACA,YACA,WACA,kBACA,eXrBF,CWsBE,sCAIA,sDACE,+BADF,sDACE,8BADF,sDACE,+BADF,sDACE,+BADF,sDACE,+BADF,sDACE,+BADF,sDACE,+BADF,sDACE,+BADF,sDACE,+BAfN,qCACE,aACA,mBAEA,yCACE,WACA,YACA,WACA,kBACA,eXrBF,CWsBE,sCAIA,sDACE,+BADF,sDACE,+BADF,sDACE,+BADF,sDACE,8BADF,sDACE,+BADF,sDACE,+BADF,sDACE,+BADF,sDACE,+BADF,sDACE,+BAfN,qCACE,aACA,mBAEA,yCACE,WACA,YACA,WACA,kBACA,eXrBF,CWsBE,sCAIA,sDACE,+BADF,sDACE,+BADF,sDACE,8BADF,sDACE,+BADF,sDACE,+BADF,sDACE,+BADF,sDACE,+BADF,sDACE,+BADF,sDACE,+BAfN,qCACE,aACA,mBAEA,yCACE,WACA,YACA,WACA,kBACA,eXrBF,CWsBE,sCAIA,sDACE,+BADF,sDACE,+BADF,sDACE,+BADF,sDACE,+BADF,sDACE,+BADF,sDACE,+BADF,sDACE,+BADF,sDACE,+BADF,sDACE,+BAMR,oBACE,QAEE,UAEF,IACE,YC7CN,WACE,iBACA,aACA,sBACA,aAEA,oBACE,YACA,aACA,sBAGF,2BAEE,WAGF,aACE,eAGF,oBACE,YACA,aACA,uBACA,mB","file":"sass.bdee49c1bb4fd99050f1.css","sourcesContent":["@use '@tygr/switch';\n\n@import 'variables';\n\n.tygr-auth {\n  [data-page] {\n    @include show(400px, 400ms, ease-out, 150ms);\n  }\n\n  [data-auth],\n  [data-prov],\n  [data-reset] {\n    @include show(44px);\n  }\n\n  @include switch.switch('page', loading, login, user) {\n    @include hide(400ms, ease-out);\n  }\n}\n\n.tygr-login {\n  @include switch.switch('auth', login, register, reset) {\n    @include hide();\n\n    &#register {\n      display: none;\n    }\n  }\n\n  @include switch.switch('prov', local, external) {\n    &:not(.disappear) {\n      @include hide();\n    }\n\n    &.disappear {\n      display: none;\n      pointer-events: none;\n    }\n  }\n}\n\n.tygr-local {\n  @include switch.switchChild('auth', reset) {\n    @include switch.switch('reset', initial, verify, password, success) {\n      @include hide();\n    }\n  }\n}\n","$accent-1: rgba(0, 0, 0, 0.4) !default;\n$accent-2: rgba(0, 0, 0, 0.7) !default;\n\n$display: 'Sansita Swashed', cursive !default;\n$paragraph: 'Bellota Text', cursive !default;\n\n$dot: black !default;\n$dot-duration: 1s;\n\n@mixin transition($duration: 400ms, $timing: linear, $delay: 0s, $hide: false) {\n  $visibility: null;\n  @if ($hide) {\n    // Delay setting visiblity until after animation is done\n    $visibility: visibility $timing 0s ($delay + $duration);\n  }\n  transition: opacity $timing $duration $delay,\n    max-height $timing $duration $delay, margin $timing $duration $delay,\n    border $timing $duration $delay, padding $timing $duration $delay,\n    transform $timing $duration $delay, width $timing $duration $delay,\n    $visibility;\n}\n\n@mixin show($max-height, $duration: 400ms, $timing: linear, $delay: 0s) {\n  @include transition($duration, $timing, $delay, false);\n  max-height: $max-height;\n  overflow: visible;\n  transform-origin: top center;\n}\n\n@mixin hide($duration: 400ms, $timing: linear, $delay: 0s) {\n  @include transition($duration, $timing, $delay, true);\n  opacity: 0;\n  max-height: 0;\n  margin: 0 8px;\n  border: none;\n  padding: 0;\n  pointer-events: none;\n  visibility: hidden;\n  transform: scaleY(0);\n}\n","@use 'sass:meta';\n@use 'sass:list';\n@use 'sass:selector';\n\n@use 'util' as *;\n\n/**\n * @param {string} $name The name of the switch\n * @param {...string} $states A list of states the switch can be in\n *\n * Optionally pass content to the mixin that will be applied when a state is not active\n * By default, this is `display: none; pointer-events: none;`\n */\n@mixin switch($name, $states...) {\n  $baseFinalSelector: selector-append(\n    '[data-#{$name}]',\n    \":not([data-#{$name}*='!'])\"\n  );\n\n  @each $state in $states {\n    $exclusionSelectors: \"[data-#{$name}~='!#{$state}'],\";\n\n    $finalSelector: selector-append(\n      $baseFinalSelector,\n      \":not([data-#{$name}~='#{$state}'])\"\n    );\n\n    $tokens: str-split($state, '/');\n\n    @if length($tokens) > 1 and nth($tokens, 1) == '' {\n      // State has a leading forward slash that was split to the first token\n      // Remove the first tokena and add the forward slash to the new first token\n      $tokens: list-slice($tokens, 2);\n      $tokens: set-nth($tokens, 1, '/#{nth($tokens, 1)}');\n    }\n\n    $partials: partials($tokens);\n    @each $partial in $partials {\n      $finalSelector: selector.append(\n        $finalSelector,\n        \":not([data-#{$name}~='^#{$partial}'])\"\n      );\n\n      $exclusionSelectors: $exclusionSelectors +\n        \"[data-#{$name}~='!^#{$partial}'],\";\n    }\n\n    &[data-#{$name}-state='#{$state}'] {\n      /**\n       * Hide any elements with the data-$name attribute that has the '!$state' exclusionary syntax\n       * in its value\n       */\n      #{$exclusionSelectors}\n\n      /**\n       * If any elements with the data-$name attribute does not have $state in its value, nor is\n       * the value using the exclusionary syntax, then hide it\n       */\n      #{$finalSelector} {\n        @if (content-exists()) {\n          // Let mixin consumer override default inactive state styles\n          @content;\n        } @else {\n          display: none;\n          pointer-events: none;\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {string} $name The name of the switch\n * @param {...string} $states A list of states for which the given styles should be applied\n */\n@mixin switchChild($name, $states...) {\n  $selectors: '';\n  @each $state in $states {\n    $selectors: $selectors + \"[data-#{$name}-state='#{$state}'] &,\";\n  }\n\n  @if $selectors != '' {\n    #{$selectors} {\n      @content;\n    }\n  }\n}\n",".tygr-auth {\n  min-width: 320px;\n  transition: width 1s;\n}\n",".tygr-auth {\n  button,\n  input[type='submit'],\n  a.provider {\n    background: none;\n    border: 1px solid black;\n    padding: 4px;\n    margin: 8px;\n    background-color: white;\n    text-decoration: unset;\n    color: unset;\n    text-align: center;\n\n    &:hover {\n      background-color: rgba(0, 0, 0, 0.1);\n    }\n    &.selected {\n      background-color: rgba(0, 0, 0, 0.2);\n    }\n\n    svg {\n      margin: 0px 3px -2px 3px;\n    }\n  }\n}\n","@import url('https://fonts.googleapis.com/css2?family=Sansita+Swashed&family=Bellota+Text:wght@700&display=swap');\n\n.tygr-auth {\n  h3 {\n    font-family: $display;\n  }\n\n  button,\n  label,\n  input,\n  p,\n  a {\n    font-family: $paragraph;\n  }\n}\n",".tygr-auth {\n  form {\n    display: flex;\n    flex-direction: column;\n  }\n\n  label {\n    margin: 0 8px;\n  }\n\n  input {\n    display: inline-block;\n    margin: 0 8px 8px 8px;\n    border: 1px solid black;\n    padding: 8px;\n\n    &:invalid:not(:placeholder-shown) {\n      border: 1px solid red;\n    }\n  }\n\n  input:disabled {\n    background-color: rgba(0, 0, 0, 0.2);\n  }\n}\n","@import 'variables';\n\n.tygr-logo {\n  overflow: visible;\n\n  .cls-1,\n  .cls-2 {\n    fill: none;\n    stroke-linecap: round;\n    stroke-miterlimit: 10;\n    stroke-width: 72px;\n  }\n\n  .cls-1 {\n    stroke: $accent-1;\n    animation: _cls-1 3s infinite;\n  }\n\n  .cls-2 {\n    stroke: $accent-2;\n    animation: _cls-2 3s infinite;\n  }\n}\n\n@keyframes _cls-1 {\n  0% {\n    stroke-dasharray: 1 3475;\n    stroke-dashoffset: -3475;\n  }\n\n  /* T */\n  25% {\n    stroke-dasharray: 361 2000;\n    stroke-dashoffset: -1612;\n  }\n  40% {\n    stroke-dasharray: 361 2000;\n    stroke-dashoffset: -1612;\n  }\n\n  /* G */\n  65% {\n    stroke-dasharray: 1048 2963;\n    stroke-dashoffset: 0;\n  }\n  70% {\n    stroke-dasharray: 1048 2963;\n    stroke-dashoffset: 0;\n  }\n\n  100% {\n    stroke-dasharray: 1 3900;\n    stroke-dashoffset: 425;\n  }\n}\n\n@keyframes _cls-2 {\n  0% {\n    stroke-dasharray: 1 2800;\n    stroke-dashoffset: 0;\n  }\n\n  /* T */\n  25% {\n    stroke-dasharray: 445 2111;\n    stroke-dashoffset: -158;\n  }\n  40% {\n    stroke-dasharray: 445 2111;\n    stroke-dashoffset: -158;\n  }\n\n  /* G */\n  65% {\n    stroke-dasharray: 183 1518;\n    stroke-dashoffset: -1518;\n  }\n  70% {\n    stroke-dasharray: 183 1518;\n    stroke-dashoffset: -1518;\n  }\n\n  100% {\n    stroke-dasharray: 1 2800;\n    stroke-dashoffset: -2711;\n  }\n}\n","$accent-1: white;\n$accent-2: yellow;\n","@import '@tygr/logo/sass';\n\n.tygr-auth {\n  .header {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n}\n",".tygr-local {\n  p,\n  h3 {\n    margin: 8px;\n    max-width: 300px;\n  }\n}\n",".tygr-login {\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n\n  .header {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .providers {\n    display: flex;\n    flex-direction: column;\n  }\n\n  #login.expanded {\n    margin-right: 30px;\n  }\n}\n","@use 'sass:math';\n\n.tygr-auth .spinner {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  padding: 16px;\n\n  &.spinner-sm {\n    padding: 5px 0;\n  }\n\n  p {\n    margin: 0 14px;\n  }\n\n  @for $i from 1 through 9 {\n    div:nth-child(#{$i}) {\n      display: flex;\n      align-items: center;\n\n      div {\n        width: 16px;\n        height: 16px;\n        margin: 8px;\n        border-radius: 50%;\n        background: $dot;\n        animation: _spinner $dot-duration linear infinite;\n      }\n\n      @for $j from 1 through 9 {\n        div:nth-child(#{$j}) {\n          animation-delay: $dot-duration * random() - $dot-duration;\n        }\n      }\n    }\n  }\n\n  @keyframes _spinner {\n    0%,\n    100% {\n      opacity: 1;\n    }\n    50% {\n      opacity: 0.5;\n    }\n  }\n}\n",".tygr-user {\n  min-height: 300px;\n  display: flex;\n  flex-direction: column;\n  padding: 16px;\n\n  .default {\n    flex-grow: 1;\n    display: flex;\n    flex-direction: column;\n  }\n\n  h3,\n  p {\n    margin: 8px;\n  }\n\n  p {\n    font-size: 12px;\n  }\n\n  .content {\n    flex-grow: 1;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n}\n"],"sourceRoot":""}